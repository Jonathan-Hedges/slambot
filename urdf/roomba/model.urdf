<?xml version="1.0" ?>
<robot name="Roomba" xmlns:xacro="http://ros.org/wiki/xacro">
		<joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0.0 0.0 0.15" rpy="0 0 0"/>
  </joint>
		<link name='chassis'>
			<pose>0 0 .15 0 0 0</pose>

			<collision name='collision'>
				<geometry>
					<box>
						<size>.4 .3 .1</size>
					</box>
				</geometry>
			</collision>

			<visual name='visual'>
				<geometry>
					<box>
						<size>.4 .3 .1</size>
					</box>
				</geometry>
					<material>
						<ambient>0 0 0 0.5</ambient>
						<diffuse>0 0 0 1</diffuse>
					</material>
			</visual>

          <collision name='caster_collision_1'>
            <pose>-0.15 0 -0.1 0 0 0</pose>
            <geometry>
                <sphere>
                <radius>.05</radius>
              </sphere>
            </geometry>

            <surface>
              <friction>
                <ode>
                  <mu>0</mu>
                  <mu2>0</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
          </collision>

          <visual name='caster_visual_1'>
            <pose>-0.15 0 -0.1 0 0 0</pose>
            <geometry>
              <sphere>
                <radius>.05</radius>
              </sphere>
       	</geometry>
					<material>
						<ambient>1 0 0 0.5</ambient>
						<diffuse>1 0 0 1</diffuse>
					</material>
     	</visual>

          <collision name='caster_collision_2'>
            <pose>0.15 0 -0.1 0 0 0</pose>
            <geometry>
                <sphere>
                <radius>.05</radius>
              </sphere>
            </geometry>

            <surface>
              <friction>
                <ode>
                  <mu>0</mu>
                  <mu2>0</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
          </collision>

          <visual name='caster_visual_2'>
            <pose>0.15 0 -0.1 0 0 0</pose>
            <geometry>
              <sphere>
                <radius>.05</radius>
              </sphere>
       	</geometry>
					<material>
						<ambient>1 0 0 0.5</ambient>
						<diffuse>1 0 0 1</diffuse>
					</material>
     	</visual>
				
				<collision name="sensor_collision">
					<pose>0.19 0 0.055 0 0 0</pose>
					<geometry>
						<box>
							<size>.01 .02 .01</size>
						</box>
					</geometry>
				</collision>
				<visual name="sensor_visual">
					<pose>0.19 0 0.055 0 0 0</pose>
					<geometry>
						<box>
							<size>.01 .02 .01</size>
						</box>
					</geometry>
	<material>
	<ambient>1 0 0 0.5</ambient>
	<diffuse>1 0 0 1</diffuse>
	</material>
				</visual>

<!-- Add a ray sensor, and give it a name -->
<sensor type="gpu_ray" name="sensor">

  <pose>0.2 0 0.055 0 0 0</pose>

  <!-- Enable visualization to see the rays in the GUI -->
  <visualize>true</visualize>

  <!-- Set the update rate of the sensor -->
  <update_rate>10</update_rate>

<ray>

  <!-- The scan element contains the horizontal and vertical beams.
       We are leaving out the vertical beams for this tutorial. -->
  <scan>

    <!-- The horizontal beams -->
    <horizontal>
      <!-- The sensor has 720 beams(samples) -->
      <samples>720</samples>

      <resolution>1</resolution>

      <!-- Minimum angle in radians -->
      <min_angle>-1.5708</min_angle>

      <!-- Maximum angle in radians -->
      <max_angle>1.5708</max_angle>
    </horizontal>
  </scan>

  <!-- Range defines characteristics of an individual beam -->
  <range>

    <!-- Minimum distance of the beam -->
    <min>0.05</min>

    <!-- Maximum distance of the beam -->
    <max>15</max>

    <!-- Linear resolution of the beam -->
    <resolution>0.02</resolution>
  </range>        
	<noise>
                <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
</ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/Roomba/laser/scan</topicName>
        <frameName>chassis</frameName>
	<robotNamespace>roomba</robotNamespace>
      </plugin>
</sensor>

		</link>

      <link name="left_wheel">
        <pose>0 0.175 0.15 0 1.5707 1.5707</pose>
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>.15</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </collision>
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>.15</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
	<material>
	<ambient>1 0 0 0.5</ambient>
	<diffuse>1 0 0 1</diffuse>
	</material>
        </visual>
      </link>

      <link name="right_wheel">
        <pose>0 -0.175 0.15 0 1.5707 1.5707</pose>
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>.15</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </collision>
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>.15</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
	<material>
	<ambient>1 0 0 0.5</ambient>
	<diffuse>1 0 0 1</diffuse>
	</material>
        </visual>
      </link>

      <joint type="revolute" name="left_wheel_hinge">
        <pose>0 0 0 0 0 0</pose>
        <child>left_wheel</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>

      <joint type="revolute" name="right_wheel_hinge">
        <pose>0 0 0 0 0 0</pose>
        <child>right_wheel</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>

<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>10</updateRate>
            <leftJoint>left_wheel_hinge</leftJoint>
            <rightJoint>right_wheel_hinge</rightJoint>
            <wheelSeparation>0.3</wheelSeparation>
            <wheelDiameter>0.3</wheelDiameter>
            <wheelTorque>1.5</wheelTorque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_footprint</robotBaseFrame>
	 		<publishWheelTF>false</publishWheelTF>
			<publishOdomTF>true</publishOdomTF>
			<wheelAcceleration>0</wheelAcceleration>
			<odometrySource>1</odometrySource>
 </plugin>
</robot>
